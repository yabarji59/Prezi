name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # Le pipeline s'exécute lorsqu'il y a un push sur la branche "main".

  workflow_dispatch:  # Permet de déclencher manuellement ce workflow depuis l'onglet Actions.

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Marp Presentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Récupère le code source depuis le dépôt GitHub.

      - name: Install dependencies
        run: npm install  # Installe les dépendances nécessaires pour construire la présentation.

      - name: Build Marp slides
        run: npx @marp-team/marp-cli slide-deck.md --html --output ./dist/index.html  # Compile la présentation Marp en fichier HTML.

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3  # Sauvegarde les fichiers générés comme un artefact pour le déploiement.
        with:
          name: build-artifact  # Nom de l'artefact créé.
          path: ./dist  # Chemin vers les fichiers compilés.

  deploy:
    name: Deploy to GitHub Pages
    needs: build  # Ce job dépend du job de build.
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # Définit l'environnement pour le déploiement.
      url: ${{ steps.deployment.outputs.page_url }}  # URL du site déployé.
    steps:
      - name: Download artifact
        uses: actions/download-pages-artifact@v3  # Télécharge les fichiers générés pour le déploiement.
        with:
          name: build-artifact  # Nom de l'artefact à télécharger.

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Déploie les fichiers sur GitHub Pages.
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Utilise le token GitHub pour l'authentification.
          publish_dir: ./dist  # Chemin vers les fichiers à publier.
