name: marp-to-pages
concurrency: marp-to-pages

on:
  push:
    branches: [ main ]
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure build dir exists
        run: mkdir -p build

      - name: Copy images directory (if exists)
        run: if [[ -d img ]]; then cp -R img build/img; fi

      - name: Marp Build (pitchme)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: pitchme.md -o build/index.html
        env:
          MARP_USER: root:root

      - name: Marp Build (pitchme.pdf)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: pitchme.md --allow-local-files -o build/pitchme.pdf
        env:
          MARP_USER: root:root

      - name: Marp Build (pitchme.pptx)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: pitchme.md --allow-local-files -o build/pitchme.pptx
        env:
          MARP_USER: root:root

      - name: Check if docs folder exists
        id: docs-folder-exists
        run: bash -c "[[ -d docs ]] ; echo \"has_docs=\$?\" >> \"$GITHUB_OUTPUT\""

      - name: Marp Build (docs folder, if exists)
        if: steps.docs-folder-exists.outputs.has_docs == '0'
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: -I docs/ -o build/docs/

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: build

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
